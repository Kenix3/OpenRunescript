// Generated from java-escape by ANTLR 4.11.1
package com.openrsc.openrunescript.parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class OpenRunescriptLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		LabelSpecifier=1, AlwaysSpecifier=2, TrueSpecifier=3, FalseSpecifier=4, 
		EndStatement=5, Comma=6, OpenParens=7, CloseParens=8, LineComment=9, BlockComment=10, 
		WhiteSpace=11, Number=12, String=13, Identifier=14;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"StringCharacter", "FirstIdentifierCharacter", "IdentifierCharacter", 
			"Digit", "NonZeroDigit", "OpenBlockComment", "LongOpenBlockComment", 
			"CloseBlockComment", "LongCloseBlockComment", "StartLineComment", "Quote", 
			"SingleQuote", "EndOfLine", "NotEndOfLine", "Tab", "Space", "WhitespaceCharacters", 
			"LabelSpecifier", "AlwaysSpecifier", "TrueSpecifier", "FalseSpecifier", 
			"EndStatement", "Comma", "OpenParens", "CloseParens", "LineComment", 
			"BlockComment", "WhiteSpace", "Number", "String", "Identifier"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'='", "'*'", "'+'", "'-'", "';'", "','", "'('", "')'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "LabelSpecifier", "AlwaysSpecifier", "TrueSpecifier", "FalseSpecifier", 
			"EndStatement", "Comma", "OpenParens", "CloseParens", "LineComment", 
			"BlockComment", "WhiteSpace", "Number", "String", "Identifier"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public OpenRunescriptLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "OpenRunescript.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u000e\u00be\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0002\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a"+
		"\u0002\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d"+
		"\u0002\u001e\u0007\u001e\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001"+
		"\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001"+
		"\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001\u000b\u0001\u000b"+
		"\u0001\f\u0001\f\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000f\u0001"+
		"\u000f\u0001\u0010\u0001\u0010\u0001\u0010\u0003\u0010j\b\u0010\u0001"+
		"\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001"+
		"\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001"+
		"\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0005"+
		"\u0019~\b\u0019\n\u0019\f\u0019\u0081\t\u0019\u0001\u0019\u0001\u0019"+
		"\u0001\u001a\u0001\u001a\u0003\u001a\u0087\b\u001a\u0001\u001a\u0005\u001a"+
		"\u008a\b\u001a\n\u001a\f\u001a\u008d\t\u001a\u0001\u001a\u0001\u001a\u0003"+
		"\u001a\u0091\b\u001a\u0001\u001a\u0001\u001a\u0001\u001b\u0004\u001b\u0096"+
		"\b\u001b\u000b\u001b\f\u001b\u0097\u0001\u001b\u0001\u001b\u0001\u001c"+
		"\u0001\u001c\u0001\u001c\u0005\u001c\u009f\b\u001c\n\u001c\f\u001c\u00a2"+
		"\t\u001c\u0003\u001c\u00a4\b\u001c\u0001\u001d\u0001\u001d\u0004\u001d"+
		"\u00a8\b\u001d\u000b\u001d\f\u001d\u00a9\u0001\u001d\u0001\u001d\u0001"+
		"\u001d\u0001\u001d\u0004\u001d\u00b0\b\u001d\u000b\u001d\f\u001d\u00b1"+
		"\u0001\u001d\u0001\u001d\u0003\u001d\u00b6\b\u001d\u0001\u001e\u0001\u001e"+
		"\u0005\u001e\u00ba\b\u001e\n\u001e\f\u001e\u00bd\t\u001e\u0001\u008b\u0000"+
		"\u001f\u0001\u0000\u0003\u0000\u0005\u0000\u0007\u0000\t\u0000\u000b\u0000"+
		"\r\u0000\u000f\u0000\u0011\u0000\u0013\u0000\u0015\u0000\u0017\u0000\u0019"+
		"\u0000\u001b\u0000\u001d\u0000\u001f\u0000!\u0000#\u0001%\u0002\'\u0003"+
		")\u0004+\u0005-\u0006/\u00071\b3\t5\n7\u000b9\f;\r=\u000e\u0001\u0000"+
		"\u0007\u0003\u0000\n\n\r\r\"\"\u0003\u0000AZ__az\u0004\u000009AZ__az\u0001"+
		"\u000009\u0001\u000019\u0002\u0000\n\n\r\r\u0001\u0000\t\t\u00b9\u0000"+
		"#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001"+
		"\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000"+
		"\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u0000"+
		"1\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001"+
		"\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000"+
		"\u0000\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0001"+
		"?\u0001\u0000\u0000\u0000\u0003A\u0001\u0000\u0000\u0000\u0005C\u0001"+
		"\u0000\u0000\u0000\u0007E\u0001\u0000\u0000\u0000\tG\u0001\u0000\u0000"+
		"\u0000\u000bI\u0001\u0000\u0000\u0000\rL\u0001\u0000\u0000\u0000\u000f"+
		"P\u0001\u0000\u0000\u0000\u0011S\u0001\u0000\u0000\u0000\u0013W\u0001"+
		"\u0000\u0000\u0000\u0015Z\u0001\u0000\u0000\u0000\u0017\\\u0001\u0000"+
		"\u0000\u0000\u0019^\u0001\u0000\u0000\u0000\u001b`\u0001\u0000\u0000\u0000"+
		"\u001db\u0001\u0000\u0000\u0000\u001fd\u0001\u0000\u0000\u0000!i\u0001"+
		"\u0000\u0000\u0000#k\u0001\u0000\u0000\u0000%m\u0001\u0000\u0000\u0000"+
		"\'o\u0001\u0000\u0000\u0000)q\u0001\u0000\u0000\u0000+s\u0001\u0000\u0000"+
		"\u0000-u\u0001\u0000\u0000\u0000/w\u0001\u0000\u0000\u00001y\u0001\u0000"+
		"\u0000\u00003{\u0001\u0000\u0000\u00005\u0086\u0001\u0000\u0000\u0000"+
		"7\u0095\u0001\u0000\u0000\u00009\u00a3\u0001\u0000\u0000\u0000;\u00b5"+
		"\u0001\u0000\u0000\u0000=\u00b7\u0001\u0000\u0000\u0000?@\b\u0000\u0000"+
		"\u0000@\u0002\u0001\u0000\u0000\u0000AB\u0007\u0001\u0000\u0000B\u0004"+
		"\u0001\u0000\u0000\u0000CD\u0007\u0002\u0000\u0000D\u0006\u0001\u0000"+
		"\u0000\u0000EF\u0007\u0003\u0000\u0000F\b\u0001\u0000\u0000\u0000GH\u0007"+
		"\u0004\u0000\u0000H\n\u0001\u0000\u0000\u0000IJ\u0005/\u0000\u0000JK\u0005"+
		"*\u0000\u0000K\f\u0001\u0000\u0000\u0000LM\u0005/\u0000\u0000MN\u0005"+
		"/\u0000\u0000NO\u0005*\u0000\u0000O\u000e\u0001\u0000\u0000\u0000PQ\u0005"+
		"*\u0000\u0000QR\u0005/\u0000\u0000R\u0010\u0001\u0000\u0000\u0000ST\u0005"+
		"*\u0000\u0000TU\u0005/\u0000\u0000UV\u0005/\u0000\u0000V\u0012\u0001\u0000"+
		"\u0000\u0000WX\u0005/\u0000\u0000XY\u0005/\u0000\u0000Y\u0014\u0001\u0000"+
		"\u0000\u0000Z[\u0005\"\u0000\u0000[\u0016\u0001\u0000\u0000\u0000\\]\u0005"+
		"\'\u0000\u0000]\u0018\u0001\u0000\u0000\u0000^_\u0007\u0005\u0000\u0000"+
		"_\u001a\u0001\u0000\u0000\u0000`a\b\u0005\u0000\u0000a\u001c\u0001\u0000"+
		"\u0000\u0000bc\u0007\u0006\u0000\u0000c\u001e\u0001\u0000\u0000\u0000"+
		"de\u0005 \u0000\u0000e \u0001\u0000\u0000\u0000fj\u0003\u0019\f\u0000"+
		"gj\u0003\u001d\u000e\u0000hj\u0003\u001f\u000f\u0000if\u0001\u0000\u0000"+
		"\u0000ig\u0001\u0000\u0000\u0000ih\u0001\u0000\u0000\u0000j\"\u0001\u0000"+
		"\u0000\u0000kl\u0005=\u0000\u0000l$\u0001\u0000\u0000\u0000mn\u0005*\u0000"+
		"\u0000n&\u0001\u0000\u0000\u0000op\u0005+\u0000\u0000p(\u0001\u0000\u0000"+
		"\u0000qr\u0005-\u0000\u0000r*\u0001\u0000\u0000\u0000st\u0005;\u0000\u0000"+
		"t,\u0001\u0000\u0000\u0000uv\u0005,\u0000\u0000v.\u0001\u0000\u0000\u0000"+
		"wx\u0005(\u0000\u0000x0\u0001\u0000\u0000\u0000yz\u0005)\u0000\u0000z"+
		"2\u0001\u0000\u0000\u0000{\u007f\u0003\u0013\t\u0000|~\u0003\u001b\r\u0000"+
		"}|\u0001\u0000\u0000\u0000~\u0081\u0001\u0000\u0000\u0000\u007f}\u0001"+
		"\u0000\u0000\u0000\u007f\u0080\u0001\u0000\u0000\u0000\u0080\u0082\u0001"+
		"\u0000\u0000\u0000\u0081\u007f\u0001\u0000\u0000\u0000\u0082\u0083\u0006"+
		"\u0019\u0000\u0000\u00834\u0001\u0000\u0000\u0000\u0084\u0087\u0003\u000b"+
		"\u0005\u0000\u0085\u0087\u0003\r\u0006\u0000\u0086\u0084\u0001\u0000\u0000"+
		"\u0000\u0086\u0085\u0001\u0000\u0000\u0000\u0087\u008b\u0001\u0000\u0000"+
		"\u0000\u0088\u008a\t\u0000\u0000\u0000\u0089\u0088\u0001\u0000\u0000\u0000"+
		"\u008a\u008d\u0001\u0000\u0000\u0000\u008b\u008c\u0001\u0000\u0000\u0000"+
		"\u008b\u0089\u0001\u0000\u0000\u0000\u008c\u0090\u0001\u0000\u0000\u0000"+
		"\u008d\u008b\u0001\u0000\u0000\u0000\u008e\u0091\u0003\u000f\u0007\u0000"+
		"\u008f\u0091\u0003\u0011\b\u0000\u0090\u008e\u0001\u0000\u0000\u0000\u0090"+
		"\u008f\u0001\u0000\u0000\u0000\u0091\u0092\u0001\u0000\u0000\u0000\u0092"+
		"\u0093\u0006\u001a\u0000\u0000\u00936\u0001\u0000\u0000\u0000\u0094\u0096"+
		"\u0003!\u0010\u0000\u0095\u0094\u0001\u0000\u0000\u0000\u0096\u0097\u0001"+
		"\u0000\u0000\u0000\u0097\u0095\u0001\u0000\u0000\u0000\u0097\u0098\u0001"+
		"\u0000\u0000\u0000\u0098\u0099\u0001\u0000\u0000\u0000\u0099\u009a\u0006"+
		"\u001b\u0000\u0000\u009a8\u0001\u0000\u0000\u0000\u009b\u00a4\u0003\u0007"+
		"\u0003\u0000\u009c\u00a0\u0003\t\u0004\u0000\u009d\u009f\u0003\u0007\u0003"+
		"\u0000\u009e\u009d\u0001\u0000\u0000\u0000\u009f\u00a2\u0001\u0000\u0000"+
		"\u0000\u00a0\u009e\u0001\u0000\u0000\u0000\u00a0\u00a1\u0001\u0000\u0000"+
		"\u0000\u00a1\u00a4\u0001\u0000\u0000\u0000\u00a2\u00a0\u0001\u0000\u0000"+
		"\u0000\u00a3\u009b\u0001\u0000\u0000\u0000\u00a3\u009c\u0001\u0000\u0000"+
		"\u0000\u00a4:\u0001\u0000\u0000\u0000\u00a5\u00a7\u0003\u0015\n\u0000"+
		"\u00a6\u00a8\u0003\u0001\u0000\u0000\u00a7\u00a6\u0001\u0000\u0000\u0000"+
		"\u00a8\u00a9\u0001\u0000\u0000\u0000\u00a9\u00a7\u0001\u0000\u0000\u0000"+
		"\u00a9\u00aa\u0001\u0000\u0000\u0000\u00aa\u00ab\u0001\u0000\u0000\u0000"+
		"\u00ab\u00ac\u0003\u0015\n\u0000\u00ac\u00b6\u0001\u0000\u0000\u0000\u00ad"+
		"\u00af\u0003\u0017\u000b\u0000\u00ae\u00b0\u0003\u0001\u0000\u0000\u00af"+
		"\u00ae\u0001\u0000\u0000\u0000\u00b0\u00b1\u0001\u0000\u0000\u0000\u00b1"+
		"\u00af\u0001\u0000\u0000\u0000\u00b1\u00b2\u0001\u0000\u0000\u0000\u00b2"+
		"\u00b3\u0001\u0000\u0000\u0000\u00b3\u00b4\u0003\u0017\u000b\u0000\u00b4"+
		"\u00b6\u0001\u0000\u0000\u0000\u00b5\u00a5\u0001\u0000\u0000\u0000\u00b5"+
		"\u00ad\u0001\u0000\u0000\u0000\u00b6<\u0001\u0000\u0000\u0000\u00b7\u00bb"+
		"\u0003\u0003\u0001\u0000\u00b8\u00ba\u0003\u0005\u0002\u0000\u00b9\u00b8"+
		"\u0001\u0000\u0000\u0000\u00ba\u00bd\u0001\u0000\u0000\u0000\u00bb\u00b9"+
		"\u0001\u0000\u0000\u0000\u00bb\u00bc\u0001\u0000\u0000\u0000\u00bc>\u0001"+
		"\u0000\u0000\u0000\u00bd\u00bb\u0001\u0000\u0000\u0000\r\u0000i\u007f"+
		"\u0086\u008b\u0090\u0097\u00a0\u00a3\u00a9\u00b1\u00b5\u00bb\u0001\u0006"+
		"\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}